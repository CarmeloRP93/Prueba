<?php

namespace Crivero\PruebaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * NotificacionesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificacionesRepository extends EntityRepository {

    public function getNotificaciones($id) {
        return $this->getEntityManager()
                        ->createQuery("SELECT n FROM CriveroPruebaBundle:Notificaciones n WHERE n.idDestinatario = :id")
                        ->setParameter('id', $id)
                        ->getResult();
    }

    public function getNotificacionEntidad($id, $idUsuario) {
        return $this->getEntityManager()
                        ->createQuery("SELECT n FROM CriveroPruebaBundle:Notificaciones n WHERE n.idEntidad = :id "
                                . "AND n.idDestinatario = :idUsuario "
                                . "AND n.estado='No leido'")
                        ->setParameter('id', $id)
                        ->setParameter('idUsuario', $idUsuario)
                        ->getResult();
    }
    
    public function getNotificacionEntidadParticipantes($id, $idParticipante, $idMonitor) {
        return $this->getEntityManager()
                        ->createQuery("SELECT n FROM CriveroPruebaBundle:Notificaciones n WHERE n.idEntidad = :id "
                                . "AND n.idDestinatario = :idMonitor "
                                . "AND n.idOrigen = :idParticipante "
                                . "AND n.estado='No leido'")
                        ->setParameter('id', $id)
                        ->setParameter('idMonitor', $idMonitor)
                        ->setParameter('idParticipante', $idParticipante)
                        ->getResult();
    }

    public function removeNotificacionesEntidad($entidad, $concepto) {
        $this->getEntityManager()
                ->createQuery("DELETE FROM CriveroPruebaBundle:Notificaciones n WHERE n.idEntidad = :entidad AND n.concepto = :concepto")
                ->setParameter('entidad', $entidad)
                ->setParameter('concepto', $concepto)
                ->execute();
    }

}
