<?php

namespace Crivero\PruebaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UsuariosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuariosRepository extends EntityRepository {

    public function getClientes() {
        return $this->getEntityManager()
                        ->createQuery('SELECT u FROM CriveroPruebaBundle:Usuarios u WHERE u.tipo=2')
                        ->getResult();
    }

    public function searchClientes($searchQuery) {
        return $this->getEntityManager()
                        ->createQuery('SELECT u FROM CriveroPruebaBundle:Usuarios u WHERE u.tipo=2 AND u.username = :user OR u.nombre = :nombre')
                        ->setParameter('user', $searchQuery)
                        ->setParameter('nombre', $searchQuery)
                        ->getResult();
    }

    public function getReservasCliente($idCliente) {
        return $this->getEntityManager()
                        ->createQuery("SELECT r FROM CriveroPruebaBundle:Reservas r WHERE r.idCliente = :id AND r.estadoReserva = 'Reservado'")
                        ->setParameter('id', $idCliente)
                        ->getResult();
    }

    public function getMonitores() {
        return $this->getEntityManager()
                        ->createQuery('SELECT u FROM CriveroPruebaBundle:Usuarios u WHERE u.tipo=3')
                        ->getResult();
    }

    public function searchMonitores($searchQuery) {
        return $this->getEntityManager()
                        ->createQuery('SELECT u FROM CriveroPruebaBundle:Usuarios u WHERE u.tipo=3 AND u.username = :user OR u.nombre = :nombre')
                        ->setParameter('user', $searchQuery)
                        ->setParameter('nombre', $searchQuery)
                        ->getResult();
    }
    
    public function getSesionesMonitor($idMonitor) {
        return $this->getEntityManager()
                        ->createQuery("SELECT s FROM CriveroPruebaBundle:Sesiones s WHERE s.idMonitor = :id AND s.estado = 'validada'")
                        ->setParameter('id', $idMonitor)
                        ->getResult();
    }

    public function recuperarPass($id) {
        return $this->getEntityManager()
                        ->createQuery('SELECT u.password FROM CriveroPruebaBundle:Usuarios u WHERE u.id = :id')
                        ->setParameter('id', $id)
                        ->getResult();
    }
    
    public function getDestinatario($email) {
        return $this->getEntityManager()
            ->createQuery("SELECT u FROM CriveroPruebaBundle:Usuarios u WHERE u.email = :email")
            ->setParameter('email', $email)
            ->getResult();
    }

}
